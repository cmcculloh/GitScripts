## /* @config
#	@description
#	This file, when copied into the same directory WITHOUT the .example extension will
#	override virtually any variable set through the various *.cfg files. This is also
#	where you should set any variable flags that control behavior via the flagged_actions.cfg
#	file. To see which variables you can overwrite and which flags you can set, view
#	the *.cfg files within the cfg/ directory.
#	description@
#
#	@notes
#	- Aliases set in aliases.cfg cannot be overridden from this file. You will have to
#	re-define them sometime after you have included the GitScripts bootstrap file (_gsinit.sh).
#	notes@
#
#	@file cfg/user.overrides.example
## */


# [vars] It's important that I clean up after major operations...
export clearscreenanswer="y"

# [vars] Auto choose your default clear screen answer? (helpful if you *never* choose "y")
export autochoosedefclsa="y"

# [vars] My workflow is such that I require some extra protections...
# These files contain the names of branches that require protection, one on each line.
export protectmergefrom_path="~/gs_protectmergefrom.txt"
export protectmergeto_path="~/gs_protectmergeto.txt"

# [colors] Magenta headings are more my style...
export STYLE_H1=$'\033[1;33;42m'

#change blue to yellow
export CFG_BLUE=$'33'

# [flagged_actions] I have my own prompt that I prefer...
export USE_GS_PROMPT=false

# [flagged_actions] I set up my own aliases when I first got Git...
export IMPORT_GIT_ALIASES=false


# [ -n "$workspace_name" ] || export workspace_name="ubuntu_galileo_workspace"
# [ -n "$workspace_name" ] || export workspace_name="coda_workspace"


# Some shortcuts right to GitScripts commands
alias bname=__copy_branch_name_to_clipboard
alias branchname=__copy_branch_name_to_clipboard
alias wip="${gitscripts_path}commit.sh -A WIP"

# Wheter to prepend the branchname onto commit messages when using the commit tool in GitScripts (default: true)
# export PREPEND_BRANCHNAME_TO_COMMIT_MESSAGES=true
export PREPEND_BRANCHNAME_TO_COMMIT_MESSAGES=false


